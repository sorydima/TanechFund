name: Auto Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: '1.0.0'
      prerelease:
        description: 'Is this a prerelease?'
        type: boolean
        default: false

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get version
      id: get_version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.version }}
        release_name: Release ${{ steps.get_version.outputs.version }}
        body: |
          ## üöÄ What's New in ${{ steps.get_version.outputs.version }}
          
          ### ‚ú® Features
          - New Web4 Movement features
          - Enhanced Web5 Creation tools
          - Improved blockchain integration
          - Better user experience
          
          ### üêõ Bug Fixes
          - Fixed CanvasKit loading issues
          - Resolved Android build warnings
          - Improved error handling
          - Enhanced performance
          
          ### üì± Platform Updates
          - **Windows**: Optimized build process
          - **Android**: Updated to SDK 36
          - **iOS**: Enhanced iOS 17+ support
          - **Web**: Improved HTML renderer
          - **macOS**: Better macOS integration
          - **Linux**: Enhanced Linux support
          
          ### üîß Technical Improvements
          - Updated Flutter to 3.35.2
          - Enhanced security measures
          - Improved CI/CD pipeline
          - Better error reporting
          
          ### üìö Documentation
          - Updated API documentation
          - Enhanced user guide
          - Improved developer documentation
          - Added troubleshooting guides
          
          ---
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/${{ github.event.before }}...${{ github.sha }}
        draft: false
        prerelease: ${{ github.event.inputs.prerelease || false }}

  build-windows:
    runs-on: windows-latest
    needs: create-release

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.2'
        channel: 'stable'
        cache: true

    - name: Install dependencies
      run: flutter pub get

    - name: Build Windows
      run: flutter build windows --release

    - name: Create Windows archive
      run: |
        Compress-Archive -Path "build\windows\x64\runner\Release\*" -DestinationPath "rechain_vc_lab_windows.zip" -Force

    - name: Upload Windows Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./rechain_vc_lab_windows.zip
        asset_name: rechain_vc_lab_windows.zip
        asset_content_type: application/zip

  build-android:
    runs-on: ubuntu-latest
    needs: create-release

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Java
      uses: actions/setup-java@v5
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.2'
        channel: 'stable'
        cache: true

    - name: Install dependencies
      run: flutter pub get

    - name: Build Android APK
      run: flutter build apk --release

    - name: Build Android App Bundle
      run: flutter build appbundle --release

    - name: Upload Android APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./build/app/outputs/flutter-apk/app-release.apk
        asset_name: rechain_vc_lab_android.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload Android App Bundle
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./build/app/outputs/bundle/release/app-release.aab
        asset_name: rechain_vc_lab_android.aab
        asset_content_type: application/octet-stream

  build-web:
    runs-on: ubuntu-latest
    needs: create-release

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.2'
        channel: 'stable'
        cache: true

    - name: Install dependencies
      run: flutter pub get

    - name: Build Web
      run: |
        flutter build web --release --no-tree-shake-icons
        rm -rf build/web/canvaskit

    - name: Create Web archive
      run: |
        cd build/web
        zip -r ../../rechain_vc_lab_web.zip .

    - name: Upload Web Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./rechain_vc_lab_web.zip
        asset_name: rechain_vc_lab_web.zip
        asset_content_type: application/zip

  build-linux:
    runs-on: ubuntu-latest
    needs: create-release

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.2'
        channel: 'stable'
        cache: true

    - name: Install dependencies
      run: flutter pub get

    - name: Install Linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev

    - name: Build Linux
      run: flutter build linux --release

    - name: Create Linux archive
      run: |
        cd build/linux/x64/release
        tar -czf ../../../rechain_vc_lab_linux.tar.gz .

    - name: Upload Linux Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./rechain_vc_lab_linux.tar.gz
        asset_name: rechain_vc_lab_linux.tar.gz
        asset_content_type: application/gzip

  build-macos:
    runs-on: macos-latest
    needs: create-release

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.2'
        channel: 'stable'
        cache: true

    - name: Install dependencies
      run: flutter pub get

    - name: Build macOS
      run: flutter build macos --release

    - name: Create macOS archive
      run: |
        cd build/macos/Build/Products/Release
        zip -r ../../../../rechain_vc_lab_macos.zip .

    - name: Upload macOS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./rechain_vc_lab_macos.zip
        asset_name: rechain_vc_lab_macos.zip
        asset_content_type: application/zip

  build-ios:
    runs-on: macos-latest
    needs: create-release

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.35.2'
        channel: 'stable'
        cache: true

    - name: Install dependencies
      run: flutter pub get

    - name: Build iOS
      run: flutter build ios --release --no-codesign

    - name: Create iOS archive
      run: |
        cd build/ios/Release-iphoneos
        zip -r ../../../rechain_vc_lab_ios.zip .

    - name: Upload iOS Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create-release.outputs.upload_url }}
        asset_path: ./rechain_vc_lab_ios.zip
        asset_name: rechain_vc_lab_ios.zip
        asset_content_type: application/zip

  notify-release:
    runs-on: ubuntu-latest
    needs: [create-release, build-windows, build-android, build-web, build-linux, build-macos, build-ios]
    if: always()

    steps:
    - name: Notify Release Completion
      run: |
        echo "Release ${{ github.ref_name }} completed!"
        echo "Windows: ${{ needs.build-windows.result }}"
        echo "Android: ${{ needs.build-android.result }}"
        echo "Web: ${{ needs.build-web.result }}"
        echo "Linux: ${{ needs.build-linux.result }}"
        echo "macOS: ${{ needs.build-macos.result }}"
        echo "iOS: ${{ needs.build-ios.result }}"
