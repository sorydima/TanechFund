name: Deploy

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

jobs:
  deploy-android:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.inputs.environment == 'production'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build Android APK
      run: flutter build apk --release
      
    - name: Build Android App Bundle
      run: flutter build appbundle --release
      
    - name: Upload APK to release
      uses: actions/upload-artifact@v3
      with:
        name: android-apk
        path: build/app/outputs/flutter-apk/app-release.apk
        
    - name: Upload AAB to release
      uses: actions/upload-artifact@v3
      with:
        name: android-aab
        path: build/app/outputs/bundle/release/app-release.aab

  deploy-web:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build Web
      run: flutter build web --release
      
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: github.ref == 'refs/heads/main'
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./build/web

  deploy-ios:
    runs-on: macos-latest
    if: github.event_name == 'push' || github.event.inputs.environment == 'production'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build iOS
      run: flutter build ios --release --no-codesign
      
    - name: Upload iOS build
      uses: actions/upload-artifact@v3
      with:
        name: ios-build
        path: build/ios/iphoneos/Runner.app

  deploy-windows:
    runs-on: windows-latest
    if: github.event_name == 'push' || github.event.inputs.environment == 'production'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build Windows
      run: flutter build windows --release
      
    - name: Upload Windows build
      uses: actions/upload-artifact@v3
      with:
        name: windows-build
        path: build/windows/x64/runner/Release/

  deploy-macos:
    runs-on: macos-latest
    if: github.event_name == 'push' || github.event.inputs.environment == 'production'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build macOS
      run: flutter build macos --release
      
    - name: Upload macOS build
      uses: actions/upload-artifact@v3
      with:
        name: macos-build
        path: build/macos/Build/Products/Release/

  deploy-linux:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event.inputs.environment == 'production'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.19.0'
        channel: 'stable'
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build Linux
      run: flutter build linux --release
      
    - name: Upload Linux build
      uses: actions/upload-artifact@v3
      with:
        name: linux-build
        path: build/linux/x64/release/bundle/

  notify:
    runs-on: ubuntu-latest
    needs: [deploy-android, deploy-web, deploy-ios, deploy-windows, deploy-macos, deploy-linux]
    if: always()
    
    steps:
    - name: Notify deployment status
      run: |
        echo "## Deployment Status" >> $GITHUB_STEP_SUMMARY
        echo "Android: ${{ needs.deploy-android.result }}" >> $GITHUB_STEP_SUMMARY
        echo "Web: ${{ needs.deploy-web.result }}" >> $GITHUB_STEP_SUMMARY
        echo "iOS: ${{ needs.deploy-ios.result }}" >> $GITHUB_STEP_SUMMARY
        echo "Windows: ${{ needs.deploy-windows.result }}" >> $GITHUB_STEP_SUMMARY
        echo "macOS: ${{ needs.deploy-macos.result }}" >> $GITHUB_STEP_SUMMARY
        echo "Linux: ${{ needs.deploy-linux.result }}" >> $GITHUB_STEP_SUMMARY
