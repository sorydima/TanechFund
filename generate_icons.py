#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –∏–∫–æ–Ω–æ–∫ –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º Flutter –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è REChain VC Lab
"""

import os
import subprocess
import sys
from pathlib import Path

def install_requirements():
    """–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π"""
    try:
        import cairosvg
        import PIL
        print("‚úÖ –í—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
    except ImportError:
        print("üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...")
        subprocess.check_call([sys.executable, "-m", "pip", "install", "cairosvg", "Pillow"])
        print("‚úÖ –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")

def generate_png_from_svg(svg_path, output_path, size):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è PNG –∏–∑ SVG —Å –∑–∞–¥–∞–Ω–Ω—ã–º —Ä–∞–∑–º–µ—Ä–æ–º"""
    try:
        import cairosvg
        from PIL import Image
        import io
        
        # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º SVG –≤ PNG
        png_data = cairosvg.svg2png(url=svg_path, output_width=size, output_height=size)
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º –∫–∞–∫ PIL Image –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
        img = Image.open(io.BytesIO(png_data))
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        os.makedirs(os.path.dirname(output_path), exist_ok=True)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º PNG
        img.save(output_path, "PNG")
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∏–∫–æ–Ω–∫–∞: {output_path} ({size}x{size})")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ {output_path}: {e}")

def generate_ico_from_png(png_path, ico_path):
    """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è ICO —Ñ–∞–π–ª–∞ –∏–∑ PNG"""
    try:
        from PIL import Image
        
        # –û—Ç–∫—Ä—ã–≤–∞–µ–º PNG
        img = Image.open(png_path)
        
        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        os.makedirs(os.path.dirname(ico_path), exist_ok=True)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–∞–∫ ICO
        img.save(ico_path, "ICO", sizes=[(16, 16), (32, 32), (48, 48), (64, 64), (128, 128), (256, 256)])
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω ICO —Ñ–∞–π–ª: {ico_path}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ {ico_path}: {e}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üöÄ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö –∏–∫–æ–Ω–æ–∫ –¥–ª—è REChain VC Lab")
    print("=" * 50)
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    install_requirements()
    
    # –ü—É—Ç—å –∫ SVG –∏–∫–æ–Ω–∫–µ
    svg_path = "assets/icons/rechain_vc_lab_icon.svg"
    
    if not os.path.exists(svg_path):
        print(f"‚ùå SVG —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {svg_path}")
        return
    
    print(f"üìÅ –ò—Å—Ö–æ–¥–Ω—ã–π SVG —Ñ–∞–π–ª: {svg_path}")
    
    # Android –∏–∫–æ–Ω–∫–∏
    print("\nüì± –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Android –∏–∫–æ–Ω–æ–∫...")
    android_sizes = {
        "mipmap-mdpi": 48,
        "mipmap-hdpi": 72,
        "mipmap-xhdpi": 96,
        "mipmap-xxhdpi": 144,
        "mipmap-xxxhdpi": 192
    }
    
    for folder, size in android_sizes.items():
        output_path = f"android/app/src/main/res/{folder}/ic_launcher.png"
        generate_png_from_svg(svg_path, output_path, size)
    
    # iOS –∏–∫–æ–Ω–∫–∏
    print("\nüçé –ì–µ–Ω–µ—Ä–∞—Ü–∏—è iOS –∏–∫–æ–Ω–æ–∫...")
    ios_sizes = {
        "AppIcon.appiconset/icon-20.png": 20,
        "AppIcon.appiconset/icon-29.png": 29,
        "AppIcon.appiconset/icon-40.png": 40,
        "AppIcon.appiconset/icon-50.png": 50,
        "AppIcon.appiconset/icon-57.png": 57,
        "AppIcon.appiconset/icon-60.png": 60,
        "AppIcon.appiconset/icon-72.png": 72,
        "AppIcon.appiconset/icon-76.png": 76,
        "AppIcon.appiconset/icon-80.png": 80,
        "AppIcon.appiconset/icon-87.png": 87,
        "AppIcon.appiconset/icon-100.png": 100,
        "AppIcon.appiconset/icon-114.png": 114,
        "AppIcon.appiconset/icon-120.png": 120,
        "AppIcon.appiconset/icon-144.png": 144,
        "AppIcon.appiconset/icon-152.png": 152,
        "AppIcon.appiconset/icon-167.png": 167,
        "AppIcon.appiconset/icon-180.png": 180,
        "AppIcon.appiconset/icon-1024.png": 1024
    }
    
    for filename, size in ios_sizes.items():
        output_path = f"ios/Runner/Assets.xcassets/{filename}"
        generate_png_from_svg(svg_path, output_path, size)
    
    # Web –∏–∫–æ–Ω–∫–∏
    print("\nüåê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Web –∏–∫–æ–Ω–æ–∫...")
    web_sizes = {
        "web/icons/Icon-192.png": 192,
        "web/icons/Icon-512.png": 512,
        "web/icons/Icon-maskable-192.png": 192,
        "web/icons/Icon-maskable-512.png": 512,
        "web/favicon.png": 32
    }
    
    for filename, size in web_sizes.items():
        generate_png_from_svg(svg_path, filename, size)
    
    # Windows –∏–∫–æ–Ω–∫–∏
    print("\nü™ü –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Windows –∏–∫–æ–Ω–æ–∫...")
    windows_png = "windows/runner/rechain_vc_lab_icon.png"
    windows_ico = "windows/runner/rechain_vc_lab_icon.ico"
    
    generate_png_from_svg(svg_path, windows_png, 256)
    generate_ico_from_png(windows_png, windows_ico)
    
    # macOS –∏–∫–æ–Ω–∫–∏
    print("\nüíª –ì–µ–Ω–µ—Ä–∞—Ü–∏—è macOS –∏–∫–æ–Ω–æ–∫...")
    macos_sizes = {
        "macos/Runner/Assets.xcassets/AppIcon.appiconset/icon_16x16.png": 16,
        "macos/Runner/Assets.xcassets/AppIcon.appiconset/icon_32x32.png": 32,
        "macos/Runner/Assets.xcassets/AppIcon.appiconset/icon_64x64.png": 64,
        "macos/Runner/Assets.xcassets/AppIcon.appiconset/icon_128x128.png": 128,
        "macos/Runner/Assets.xcassets/AppIcon.appiconset/icon_256x256.png": 256,
        "macos/Runner/Assets.xcassets/AppIcon.appiconset/icon_512x512.png": 512,
        "macos/Runner/Assets.xcassets/AppIcon.appiconset/icon_1024x1024.png": 1024
    }
    
    for filename, size in macos_sizes.items():
        generate_png_from_svg(svg_path, filename, size)
    
    # Linux –∏–∫–æ–Ω–∫–∏
    print("\nüêß –ì–µ–Ω–µ—Ä–∞—Ü–∏—è Linux –∏–∫–æ–Ω–æ–∫...")
    linux_sizes = {
        "linux/icon_16x16.png": 16,
        "linux/icon_32x32.png": 32,
        "linux/icon_48x48.png": 48,
        "linux/icon_64x64.png": 64,
        "linux/icon_128x128.png": 128,
        "linux/icon_256x256.png": 256
    }
    
    for filename, size in linux_sizes.items():
        generate_png_from_svg(svg_path, filename, size)
    
    print("\nüéâ –í—Å–µ –∏–∫–æ–Ω–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã!")
    print("=" * 50)
    print("üìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –£–¥–∞–ª–∏—Ç–µ —Å—Ç–∞—Ä—ã–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∏–∫–æ–Ω–∫–∏")
    print("2. –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã")
    print("3. –ü–µ—Ä–µ—Å–æ–±–µ—Ä–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")

if __name__ == "__main__":
    main()
